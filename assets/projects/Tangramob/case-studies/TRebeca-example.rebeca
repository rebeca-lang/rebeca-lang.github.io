/* Tangrhub PTRebeca model for a 5-tangrhubs scenario */

env int numberOfCommuters = 82;

/* Mobility service costs: perHour, perKm, fixed */
env double service0CostPerHour = 0.0;
env double service1CostPerHour = 0.5;
env double service2CostPerHour = 13.0;
env double service3CostPerHour = 2.5;

env double service0CostPerKm = 0.0;
env double service1CostPerKm = 0.0;
env double service2CostPerKm = 0.1;
env double service3CostPerKm = 0.1;

env double service0CostFixed = 0.0;
env double service1CostFixed = 0.01;
env double service2CostFixed = 0.01;
env double service3CostFixed = 0.01;

reactiveclass CommuterGenerator(82) {

	knownrebecs {

		Tangrhub th0 ;
		Tangrhub th1 ;
		Tangrhub th2 ;
		Tangrhub th3 ;
		Tangrhub th4 ;

	}

	statevars {

		int arrivedCommuters;
		int[82] commuterAborts;
	}

	CommuterGenerator() {

		arrivedCommuters = 0;

		self.fireCommuters();
	}

	msgsrv fireCommuters() {

		/* Redundant code: use env variables once possible */
		int[82][3] commuterMatrix;
		int[82] commuterDelays;
		/* commuterMatrix */

		// Commuter 0
		commuterMatrix[0][0] = 4;
		commuterMatrix[0][1] = 28855617;
		commuterMatrix[0][2] = 338855;

		// Commuter 1
		commuterMatrix[1][0] = 2;
		commuterMatrix[1][1] = 31255632;
		commuterMatrix[1][2] = 164676;

		// Commuter 2
		commuterMatrix[2][0] = 3;
		commuterMatrix[2][1] = 29155795;
		commuterMatrix[2][2] = 177514;

		// Commuter 3
		commuterMatrix[3][0] = 2;
		commuterMatrix[3][1] = 31375319;
		commuterMatrix[3][2] = 953;

		// Commuter 4
		commuterMatrix[4][0] = 4;
		commuterMatrix[4][1] = 31555420;
		commuterMatrix[4][2] = 169808;

		// Commuter 5
		commuterMatrix[5][0] = 4;
		commuterMatrix[5][1] = 29575618;
		commuterMatrix[5][2] = 421730;

		// Commuter 6
		commuterMatrix[6][0] = 2;
		commuterMatrix[6][1] = 28975790;
		commuterMatrix[6][2] = 142700;

		// Commuter 7
		commuterMatrix[7][0] = 3;
		commuterMatrix[7][1] = 29755254;
		commuterMatrix[7][2] = 151802;

		// Commuter 8
		commuterMatrix[8][0] = 3;
		commuterMatrix[8][1] = 29335608;
		commuterMatrix[8][2] = 244311;

		// Commuter 9
		commuterMatrix[9][0] = 3;
		commuterMatrix[9][1] = 30055895;
		commuterMatrix[9][2] = 245555;

		// Commuter 10
		commuterMatrix[10][0] = 3;
		commuterMatrix[10][1] = 29035030;
		commuterMatrix[10][2] = 142476;

		// Commuter 11
		commuterMatrix[11][0] = 2;
		commuterMatrix[11][1] = 29455658;
		commuterMatrix[11][2] = 416008;

		// Commuter 12
		commuterMatrix[12][0] = 4;
		commuterMatrix[12][1] = 29695427;
		commuterMatrix[12][2] = 109247;

		// Commuter 13
		commuterMatrix[13][0] = 2;
		commuterMatrix[13][1] = 31255851;
		commuterMatrix[13][2] = 322635;

		// Commuter 14
		commuterMatrix[14][0] = 2;
		commuterMatrix[14][1] = 28975869;
		commuterMatrix[14][2] = 246360;

		// Commuter 15
		commuterMatrix[15][0] = 2;
		commuterMatrix[15][1] = 28855790;
		commuterMatrix[15][2] = 172862;

		// Commuter 16
		commuterMatrix[16][0] = 4;
		commuterMatrix[16][1] = 31135944;
		commuterMatrix[16][2] = 260;

		// Commuter 17
		commuterMatrix[17][0] = 4;
		commuterMatrix[17][1] = 30835129;
		commuterMatrix[17][2] = 198740;

		// Commuter 18
		commuterMatrix[18][0] = 2;
		commuterMatrix[18][1] = 29395432;
		commuterMatrix[18][2] = 285196;

		// Commuter 19
		commuterMatrix[19][0] = 2;
		commuterMatrix[19][1] = 28992688;
		commuterMatrix[19][2] = 181913;

		// Commuter 20
		commuterMatrix[20][0] = 2;
		commuterMatrix[20][1] = 31735738;
		commuterMatrix[20][2] = 119539;

		// Commuter 21
		commuterMatrix[21][0] = 3;
		commuterMatrix[21][1] = 30235551;
		commuterMatrix[21][2] = 103317;

		// Commuter 22
		commuterMatrix[22][0] = 3;
		commuterMatrix[22][1] = 29495819;
		commuterMatrix[22][2] = 198115;

		// Commuter 23
		commuterMatrix[23][0] = 3;
		commuterMatrix[23][1] = 30775451;
		commuterMatrix[23][2] = 144347;

		// Commuter 24
		commuterMatrix[24][0] = 2;
		commuterMatrix[24][1] = 28931399;
		commuterMatrix[24][2] = 333823;

		// Commuter 25
		commuterMatrix[25][0] = 4;
		commuterMatrix[25][1] = 28915872;
		commuterMatrix[25][2] = 84551;

		// Commuter 26
		commuterMatrix[26][0] = 4;
		commuterMatrix[26][1] = 29275218;
		commuterMatrix[26][2] = 155929;

		// Commuter 27
		commuterMatrix[27][0] = 3;
		commuterMatrix[27][1] = 29395819;
		commuterMatrix[27][2] = 177275;

		// Commuter 28
		commuterMatrix[28][0] = 4;
		commuterMatrix[28][1] = 31255634;
		commuterMatrix[28][2] = 186700;

		// Commuter 29
		commuterMatrix[29][0] = 4;
		commuterMatrix[29][1] = 28955984;
		commuterMatrix[29][2] = 157016;

		// Commuter 30
		commuterMatrix[30][0] = 2;
		commuterMatrix[30][1] = 29875954;
		commuterMatrix[30][2] = 256259;

		// Commuter 31
		commuterMatrix[31][0] = 2;
		commuterMatrix[31][1] = 28975972;
		commuterMatrix[31][2] = 283818;

		// Commuter 32
		commuterMatrix[32][0] = 4;
		commuterMatrix[32][1] = 30715951;
		commuterMatrix[32][2] = 261071;

		// Commuter 33
		commuterMatrix[33][0] = 2;
		commuterMatrix[33][1] = 29095771;
		commuterMatrix[33][2] = 665220;

		// Commuter 34
		commuterMatrix[34][0] = 4;
		commuterMatrix[34][1] = 29695477;
		commuterMatrix[34][2] = 136612;

		// Commuter 35
		commuterMatrix[35][0] = 4;
		commuterMatrix[35][1] = 29455378;
		commuterMatrix[35][2] = 350;

		// Commuter 36
		commuterMatrix[36][0] = 4;
		commuterMatrix[36][1] = 29155601;
		commuterMatrix[36][2] = 130955;

		// Commuter 37
		commuterMatrix[37][0] = 3;
		commuterMatrix[37][1] = 29575405;
		commuterMatrix[37][2] = 108261;

		// Commuter 38
		commuterMatrix[38][0] = 4;
		commuterMatrix[38][1] = 28855144;
		commuterMatrix[38][2] = 306904;

		// Commuter 39
		commuterMatrix[39][0] = 4;
		commuterMatrix[39][1] = 28795401;
		commuterMatrix[39][2] = 254611;

		// Commuter 40
		commuterMatrix[40][0] = 3;
		commuterMatrix[40][1] = 30235334;
		commuterMatrix[40][2] = 150117;

		// Commuter 41
		commuterMatrix[41][0] = 4;
		commuterMatrix[41][1] = 30175482;
		commuterMatrix[41][2] = 142514;

		// Commuter 42
		commuterMatrix[42][0] = 3;
		commuterMatrix[42][1] = 28855568;
		commuterMatrix[42][2] = 363356;

		// Commuter 43
		commuterMatrix[43][0] = 3;
		commuterMatrix[43][1] = 31195125;
		commuterMatrix[43][2] = 123004;

		// Commuter 44
		commuterMatrix[44][0] = 4;
		commuterMatrix[44][1] = 28945113;
		commuterMatrix[44][2] = 159864;

		// Commuter 45
		commuterMatrix[45][0] = 4;
		commuterMatrix[45][1] = 31195118;
		commuterMatrix[45][2] = 248644;

		// Commuter 46
		commuterMatrix[46][0] = 4;
		commuterMatrix[46][1] = 29275807;
		commuterMatrix[46][2] = 179460;

		// Commuter 47
		commuterMatrix[47][0] = 4;
		commuterMatrix[47][1] = 31735122;
		commuterMatrix[47][2] = 416261;

		// Commuter 48
		commuterMatrix[48][0] = 4;
		commuterMatrix[48][1] = 30355462;
		commuterMatrix[48][2] = 283001;

		// Commuter 49
		commuterMatrix[49][0] = 4;
		commuterMatrix[49][1] = 29035773;
		commuterMatrix[49][2] = 214905;

		// Commuter 50
		commuterMatrix[50][0] = 4;
		commuterMatrix[50][1] = 29395563;
		commuterMatrix[50][2] = 160802;

		// Commuter 51
		commuterMatrix[51][0] = 2;
		commuterMatrix[51][1] = 29215844;
		commuterMatrix[51][2] = 257579;

		// Commuter 52
		commuterMatrix[52][0] = 4;
		commuterMatrix[52][1] = 28855497;
		commuterMatrix[52][2] = 143083;

		// Commuter 53
		commuterMatrix[53][0] = 4;
		commuterMatrix[53][1] = 29035091;
		commuterMatrix[53][2] = 749;

		// Commuter 54
		commuterMatrix[54][0] = 3;
		commuterMatrix[54][1] = 31375670;
		commuterMatrix[54][2] = 155020;

		// Commuter 55
		commuterMatrix[55][0] = 3;
		commuterMatrix[55][1] = 29035311;
		commuterMatrix[55][2] = 259473;

		// Commuter 56
		commuterMatrix[56][0] = 4;
		commuterMatrix[56][1] = 29095510;
		commuterMatrix[56][2] = 120010;

		// Commuter 57
		commuterMatrix[57][0] = 2;
		commuterMatrix[57][1] = 30835060;
		commuterMatrix[57][2] = 173074;

		// Commuter 58
		commuterMatrix[58][0] = 3;
		commuterMatrix[58][1] = 28975358;
		commuterMatrix[58][2] = 415254;

		// Commuter 59
		commuterMatrix[59][0] = 4;
		commuterMatrix[59][1] = 29215551;
		commuterMatrix[59][2] = 364219;

		// Commuter 60
		commuterMatrix[60][0] = 3;
		commuterMatrix[60][1] = 29095777;
		commuterMatrix[60][2] = 200259;

		// Commuter 61
		commuterMatrix[61][0] = 4;
		commuterMatrix[61][1] = 29575188;
		commuterMatrix[61][2] = 209159;

		// Commuter 62
		commuterMatrix[62][0] = 2;
		commuterMatrix[62][1] = 29635933;
		commuterMatrix[62][2] = 334027;

		// Commuter 63
		commuterMatrix[63][0] = 4;
		commuterMatrix[63][1] = 29395080;
		commuterMatrix[63][2] = 437310;

		// Commuter 64
		commuterMatrix[64][0] = 2;
		commuterMatrix[64][1] = 29095862;
		commuterMatrix[64][2] = 299929;

		// Commuter 65
		commuterMatrix[65][0] = 2;
		commuterMatrix[65][1] = 29275224;
		commuterMatrix[65][2] = 123437;

		// Commuter 66
		commuterMatrix[66][0] = 3;
		commuterMatrix[66][1] = 31255049;
		commuterMatrix[66][2] = 263799;

		// Commuter 67
		commuterMatrix[67][0] = 2;
		commuterMatrix[67][1] = 28975095;
		commuterMatrix[67][2] = 263974;

		// Commuter 68
		commuterMatrix[68][0] = 4;
		commuterMatrix[68][1] = 31015721;
		commuterMatrix[68][2] = 450433;

		// Commuter 69
		commuterMatrix[69][0] = 4;
		commuterMatrix[69][1] = 29035906;
		commuterMatrix[69][2] = 218098;

		// Commuter 70
		commuterMatrix[70][0] = 4;
		commuterMatrix[70][1] = 29695748;
		commuterMatrix[70][2] = 212071;

		// Commuter 71
		commuterMatrix[71][0] = 4;
		commuterMatrix[71][1] = 29335758;
		commuterMatrix[71][2] = 293637;

		// Commuter 72
		commuterMatrix[72][0] = 4;
		commuterMatrix[72][1] = 29575966;
		commuterMatrix[72][2] = 274941;

		// Commuter 73
		commuterMatrix[73][0] = 4;
		commuterMatrix[73][1] = 31975375;
		commuterMatrix[73][2] = 139290;

		// Commuter 74
		commuterMatrix[74][0] = 2;
		commuterMatrix[74][1] = 29455868;
		commuterMatrix[74][2] = 296270;

		// Commuter 75
		commuterMatrix[75][0] = 2;
		commuterMatrix[75][1] = 29155482;
		commuterMatrix[75][2] = 295642;

		// Commuter 76
		commuterMatrix[76][0] = 2;
		commuterMatrix[76][1] = 29515209;
		commuterMatrix[76][2] = 510996;

		// Commuter 77
		commuterMatrix[77][0] = 2;
		commuterMatrix[77][1] = 29695075;
		commuterMatrix[77][2] = 120024;

		// Commuter 78
		commuterMatrix[78][0] = 4;
		commuterMatrix[78][1] = 31495908;
		commuterMatrix[78][2] = 156137;

		// Commuter 79
		commuterMatrix[79][0] = 4;
		commuterMatrix[79][1] = 29395263;
		commuterMatrix[79][2] = 117894;

		// Commuter 80
		commuterMatrix[80][0] = 4;
		commuterMatrix[80][1] = 29035807;
		commuterMatrix[80][2] = 377760;

		// Commuter 81
		commuterMatrix[81][0] = 3;
		commuterMatrix[81][1] = 30655147;
		commuterMatrix[81][2] = 259160;

		/* commuterDelays */

		// Commuter 0
		commuterDelays[0] = 20;

		// Commuter 1
		commuterDelays[1] = 16;

		// Commuter 2
		commuterDelays[2] = 13;

		// Commuter 3
		commuterDelays[3] = 15;

		// Commuter 4
		commuterDelays[4] = 16;

		// Commuter 5
		commuterDelays[5] = 17;

		// Commuter 6
		commuterDelays[6] = 18;

		// Commuter 7
		commuterDelays[7] = 12;

		// Commuter 8
		commuterDelays[8] = 18;

		// Commuter 9
		commuterDelays[9] = 16;

		// Commuter 10
		commuterDelays[10] = 12;

		// Commuter 11
		commuterDelays[11] = 16;

		// Commuter 12
		commuterDelays[12] = 12;

		// Commuter 13
		commuterDelays[13] = 15;

		// Commuter 14
		commuterDelays[14] = 12;

		// Commuter 15
		commuterDelays[15] = 19;

		// Commuter 16
		commuterDelays[16] = 12;

		// Commuter 17
		commuterDelays[17] = 18;

		// Commuter 18
		commuterDelays[18] = 18;

		// Commuter 19
		commuterDelays[19] = 17;

		// Commuter 20
		commuterDelays[20] = 11;

		// Commuter 21
		commuterDelays[21] = 14;

		// Commuter 22
		commuterDelays[22] = 10;

		// Commuter 23
		commuterDelays[23] = 11;

		// Commuter 24
		commuterDelays[24] = 13;

		// Commuter 25
		commuterDelays[25] = 19;

		// Commuter 26
		commuterDelays[26] = 12;

		// Commuter 27
		commuterDelays[27] = 16;

		// Commuter 28
		commuterDelays[28] = 15;

		// Commuter 29
		commuterDelays[29] = 15;

		// Commuter 30
		commuterDelays[30] = 12;

		// Commuter 31
		commuterDelays[31] = 12;

		// Commuter 32
		commuterDelays[32] = 16;

		// Commuter 33
		commuterDelays[33] = 10;

		// Commuter 34
		commuterDelays[34] = 16;

		// Commuter 35
		commuterDelays[35] = 16;

		// Commuter 36
		commuterDelays[36] = 16;

		// Commuter 37
		commuterDelays[37] = 16;

		// Commuter 38
		commuterDelays[38] = 14;

		// Commuter 39
		commuterDelays[39] = 12;

		// Commuter 40
		commuterDelays[40] = 16;

		// Commuter 41
		commuterDelays[41] = 11;

		// Commuter 42
		commuterDelays[42] = 15;

		// Commuter 43
		commuterDelays[43] = 15;

		// Commuter 44
		commuterDelays[44] = 16;

		// Commuter 45
		commuterDelays[45] = 17;

		// Commuter 46
		commuterDelays[46] = 19;

		// Commuter 47
		commuterDelays[47] = 18;

		// Commuter 48
		commuterDelays[48] = 15;

		// Commuter 49
		commuterDelays[49] = 9;

		// Commuter 50
		commuterDelays[50] = 15;

		// Commuter 51
		commuterDelays[51] = 18;

		// Commuter 52
		commuterDelays[52] = 13;

		// Commuter 53
		commuterDelays[53] = 12;

		// Commuter 54
		commuterDelays[54] = 12;

		// Commuter 55
		commuterDelays[55] = 16;

		// Commuter 56
		commuterDelays[56] = 14;

		// Commuter 57
		commuterDelays[57] = 12;

		// Commuter 58
		commuterDelays[58] = 20;

		// Commuter 59
		commuterDelays[59] = 19;

		// Commuter 60
		commuterDelays[60] = 15;

		// Commuter 61
		commuterDelays[61] = 20;

		// Commuter 62
		commuterDelays[62] = 17;

		// Commuter 63
		commuterDelays[63] = 20;

		// Commuter 64
		commuterDelays[64] = 12;

		// Commuter 65
		commuterDelays[65] = 16;

		// Commuter 66
		commuterDelays[66] = 22;

		// Commuter 67
		commuterDelays[67] = 15;

		// Commuter 68
		commuterDelays[68] = 14;

		// Commuter 69
		commuterDelays[69] = 9;

		// Commuter 70
		commuterDelays[70] = 18;

		// Commuter 71
		commuterDelays[71] = 15;

		// Commuter 72
		commuterDelays[72] = 17;

		// Commuter 73
		commuterDelays[73] = 21;

		// Commuter 74
		commuterDelays[74] = 20;

		// Commuter 75
		commuterDelays[75] = 15;

		// Commuter 76
		commuterDelays[76] = 13;

		// Commuter 77
		commuterDelays[77] = 10;

		// Commuter 78
		commuterDelays[78] = 11;

		// Commuter 79
		commuterDelays[79] = 14;

		// Commuter 80
		commuterDelays[80] = 20;

		// Commuter 81
		commuterDelays[81] = 19;

		int originTangrhub;
		int leavingHomeTime;
		int homeToTangrhubTime;
		int homeToTangrhubTimeDelay;
		int tangrhubArrivalTime;

		for (int i = 0; i < numberOfCommuters; i++) {

			originTangrhub = commuterMatrix[i][0];
			leavingHomeTime = commuterMatrix[i][1];
			homeToTangrhubTime = commuterMatrix[i][2];
			homeToTangrhubTimeDelay =  (commuterDelays[i] * homeToTangrhubTime) / 100;

			tangrhubArrivalTime = leavingHomeTime + homeToTangrhubTime + homeToTangrhubTimeDelay;

			/* [VARIABLE PART] ------------------------------------ */
			switch(originTangrhub){
				case 0: th0.serveCommuter(i,true) after(tangrhubArrivalTime); break;
				case 1: th1.serveCommuter(i,true) after(tangrhubArrivalTime); break;
				case 2: th2.serveCommuter(i,true) after(tangrhubArrivalTime); break;
				case 3: th3.serveCommuter(i,true) after(tangrhubArrivalTime); break;
				case 4: th4.serveCommuter(i,true) after(tangrhubArrivalTime); break;
			}
			/* [END OF VARIABLE PART] ----------------------------- */
		}
	}

	msgsrv commuterEndOfTheDay(int commuterID, boolean aborted) {

		commuterAborts[commuterID] = aborted ? 1 : 0;

		if (++arrivedCommuters == numberOfCommuters) {

			arrivedCommuters = 0;

			for (int i = 0; i < 82; i++)
				commuterAborts[i] = 0;

			th0.resetTangrhub() after(10);
			th1.resetTangrhub() after(20);
			th2.resetTangrhub() after(30);
			th3.resetTangrhub() after(40);
			th4.resetTangrhub() after(50);

			self.fireCommuters() after(500); //is 500 time units enough? Is it unuseful?
		}
	}

}

reactiveclass Tangrhub(82) { //fix queue size accordind to the scenario

	knownrebecs { //each tangrhub knows itself

		CommuterGenerator master;

		Tangrhub th0 ;
		Tangrhub th1 ;
		Tangrhub th2 ;
		Tangrhub th3 ;
		Tangrhub th4 ;

	}

	statevars {

		/* Tangrhub personal identifier */
		int thID;

		/* A priority value for each service */
		/* Deprecated
		int[3] servicePriorities;
		*/

		/* Number of service disruptions */
		/* Deprecated */
		//int numOfServiceDisruptions;

		/* Initial service fleet */
		/* Deprecated
		int initMobService1Fleet;
		int initMobService2Fleet;
		int initMobService3Fleet;
		*/

		/* Current service fleet */
		int[4] mobServiceFleets;
		int[4] unusedMobServiceFleets;

		/* Mobility service usage data collector */
		int[4] usedMobService;
		int[4] timeUsedMobService;
		double[4] costUsedMobService;

	}

	Tangrhub(int id, int serv1, int serv2, int serv3/*, int s1Priority,  int s2Priority,  int s3Priority*/) {

		thID = id;

		//numOfServiceDisruptions = 0;

		/* Deprecated
		initMobService1Fleet = serv1;
		initMobService2Fleet = serv2;
		initMobService3Fleet = serv3;
		*/

		mobServiceFleets[0] = 0; //this is assumed to be infinite (?)
		mobServiceFleets[1] = serv1;
		mobServiceFleets[2] = serv2;
		mobServiceFleets[3] = serv3;

		/* Stats about unused MobServices*/
		unusedMobServiceFleets[0] = 0;
		unusedMobServiceFleets[1] = serv1;
		unusedMobServiceFleets[2] = serv2;
		unusedMobServiceFleets[3] = serv3;

		/* Deprecated
		servicePriorities[0] = s1Priority;
		servicePriorities[1] = s2Priority;
		servicePriorities[2] = s3Priority;
		*/

	}

	msgsrv serveCommuter(int commuterID, boolean firstTrip) {

		/* Redundant code: use env variables once possible */
		int[82][2] commuterMatrix;
		int[82][2] commuterDelays;
		double[82][4] commuterPriority;
		int[5][5] thDistances;

		/* Mobility Services avg speeds matrices */
		double[5][5] service1AvgSpeed;
		double[5][5] service2AvgSpeed;
		double[5][5] service3AvgSpeed;

		/* commuterMatrix */

		// Commuter 0
		commuterMatrix[0][0] = 4;
		commuterMatrix[0][1] = 0;

		// Commuter 1
		commuterMatrix[1][0] = 2;
		commuterMatrix[1][1] = 1;

		// Commuter 2
		commuterMatrix[2][0] = 3;
		commuterMatrix[2][1] = 0;

		// Commuter 3
		commuterMatrix[3][0] = 2;
		commuterMatrix[3][1] = 1;

		// Commuter 4
		commuterMatrix[4][0] = 4;
		commuterMatrix[4][1] = 1;

		// Commuter 5
		commuterMatrix[5][0] = 4;
		commuterMatrix[5][1] = 0;

		// Commuter 6
		commuterMatrix[6][0] = 2;
		commuterMatrix[6][1] = 0;

		// Commuter 7
		commuterMatrix[7][0] = 3;
		commuterMatrix[7][1] = 1;

		// Commuter 8
		commuterMatrix[8][0] = 3;
		commuterMatrix[8][1] = 0;

		// Commuter 9
		commuterMatrix[9][0] = 3;
		commuterMatrix[9][1] = 1;

		// Commuter 10
		commuterMatrix[10][0] = 3;
		commuterMatrix[10][1] = 0;

		// Commuter 11
		commuterMatrix[11][0] = 2;
		commuterMatrix[11][1] = 0;

		// Commuter 12
		commuterMatrix[12][0] = 4;
		commuterMatrix[12][1] = 0;

		// Commuter 13
		commuterMatrix[13][0] = 2;
		commuterMatrix[13][1] = 1;

		// Commuter 14
		commuterMatrix[14][0] = 2;
		commuterMatrix[14][1] = 0;

		// Commuter 15
		commuterMatrix[15][0] = 2;
		commuterMatrix[15][1] = 0;

		// Commuter 16
		commuterMatrix[16][0] = 4;
		commuterMatrix[16][1] = 1;

		// Commuter 17
		commuterMatrix[17][0] = 4;
		commuterMatrix[17][1] = 1;

		// Commuter 18
		commuterMatrix[18][0] = 2;
		commuterMatrix[18][1] = 0;

		// Commuter 19
		commuterMatrix[19][0] = 2;
		commuterMatrix[19][1] = 0;

		// Commuter 20
		commuterMatrix[20][0] = 2;
		commuterMatrix[20][1] = 1;

		// Commuter 21
		commuterMatrix[21][0] = 3;
		commuterMatrix[21][1] = 1;

		// Commuter 22
		commuterMatrix[22][0] = 3;
		commuterMatrix[22][1] = 0;

		// Commuter 23
		commuterMatrix[23][0] = 3;
		commuterMatrix[23][1] = 0;

		// Commuter 24
		commuterMatrix[24][0] = 2;
		commuterMatrix[24][1] = 0;

		// Commuter 25
		commuterMatrix[25][0] = 4;
		commuterMatrix[25][1] = 1;

		// Commuter 26
		commuterMatrix[26][0] = 4;
		commuterMatrix[26][1] = 0;

		// Commuter 27
		commuterMatrix[27][0] = 3;
		commuterMatrix[27][1] = 0;

		// Commuter 28
		commuterMatrix[28][0] = 4;
		commuterMatrix[28][1] = 1;

		// Commuter 29
		commuterMatrix[29][0] = 4;
		commuterMatrix[29][1] = 0;

		// Commuter 30
		commuterMatrix[30][0] = 2;
		commuterMatrix[30][1] = 1;

		// Commuter 31
		commuterMatrix[31][0] = 2;
		commuterMatrix[31][1] = 0;

		// Commuter 32
		commuterMatrix[32][0] = 4;
		commuterMatrix[32][1] = 0;

		// Commuter 33
		commuterMatrix[33][0] = 2;
		commuterMatrix[33][1] = 0;

		// Commuter 34
		commuterMatrix[34][0] = 4;
		commuterMatrix[34][1] = 1;

		// Commuter 35
		commuterMatrix[35][0] = 4;
		commuterMatrix[35][1] = 0;

		// Commuter 36
		commuterMatrix[36][0] = 4;
		commuterMatrix[36][1] = 0;

		// Commuter 37
		commuterMatrix[37][0] = 3;
		commuterMatrix[37][1] = 1;

		// Commuter 38
		commuterMatrix[38][0] = 4;
		commuterMatrix[38][1] = 0;

		// Commuter 39
		commuterMatrix[39][0] = 4;
		commuterMatrix[39][1] = 0;

		// Commuter 40
		commuterMatrix[40][0] = 3;
		commuterMatrix[40][1] = 1;

		// Commuter 41
		commuterMatrix[41][0] = 4;
		commuterMatrix[41][1] = 1;

		// Commuter 42
		commuterMatrix[42][0] = 3;
		commuterMatrix[42][1] = 0;

		// Commuter 43
		commuterMatrix[43][0] = 3;
		commuterMatrix[43][1] = 1;

		// Commuter 44
		commuterMatrix[44][0] = 4;
		commuterMatrix[44][1] = 0;

		// Commuter 45
		commuterMatrix[45][0] = 4;
		commuterMatrix[45][1] = 1;

		// Commuter 46
		commuterMatrix[46][0] = 4;
		commuterMatrix[46][1] = 0;

		// Commuter 47
		commuterMatrix[47][0] = 4;
		commuterMatrix[47][1] = 1;

		// Commuter 48
		commuterMatrix[48][0] = 4;
		commuterMatrix[48][1] = 0;

		// Commuter 49
		commuterMatrix[49][0] = 4;
		commuterMatrix[49][1] = 0;

		// Commuter 50
		commuterMatrix[50][0] = 4;
		commuterMatrix[50][1] = 1;

		// Commuter 51
		commuterMatrix[51][0] = 2;
		commuterMatrix[51][1] = 0;

		// Commuter 52
		commuterMatrix[52][0] = 4;
		commuterMatrix[52][1] = 0;

		// Commuter 53
		commuterMatrix[53][0] = 4;
		commuterMatrix[53][1] = 0;

		// Commuter 54
		commuterMatrix[54][0] = 3;
		commuterMatrix[54][1] = 1;

		// Commuter 55
		commuterMatrix[55][0] = 3;
		commuterMatrix[55][1] = 0;

		// Commuter 56
		commuterMatrix[56][0] = 4;
		commuterMatrix[56][1] = 0;

		// Commuter 57
		commuterMatrix[57][0] = 2;
		commuterMatrix[57][1] = 1;

		// Commuter 58
		commuterMatrix[58][0] = 3;
		commuterMatrix[58][1] = 0;

		// Commuter 59
		commuterMatrix[59][0] = 4;
		commuterMatrix[59][1] = 0;

		// Commuter 60
		commuterMatrix[60][0] = 3;
		commuterMatrix[60][1] = 0;

		// Commuter 61
		commuterMatrix[61][0] = 4;
		commuterMatrix[61][1] = 0;

		// Commuter 62
		commuterMatrix[62][0] = 2;
		commuterMatrix[62][1] = 0;

		// Commuter 63
		commuterMatrix[63][0] = 4;
		commuterMatrix[63][1] = 0;

		// Commuter 64
		commuterMatrix[64][0] = 2;
		commuterMatrix[64][1] = 0;

		// Commuter 65
		commuterMatrix[65][0] = 2;
		commuterMatrix[65][1] = 0;

		// Commuter 66
		commuterMatrix[66][0] = 3;
		commuterMatrix[66][1] = 0;

		// Commuter 67
		commuterMatrix[67][0] = 2;
		commuterMatrix[67][1] = 0;

		// Commuter 68
		commuterMatrix[68][0] = 4;
		commuterMatrix[68][1] = 1;

		// Commuter 69
		commuterMatrix[69][0] = 4;
		commuterMatrix[69][1] = 0;

		// Commuter 70
		commuterMatrix[70][0] = 4;
		commuterMatrix[70][1] = 0;

		// Commuter 71
		commuterMatrix[71][0] = 4;
		commuterMatrix[71][1] = 0;

		// Commuter 72
		commuterMatrix[72][0] = 4;
		commuterMatrix[72][1] = 0;

		// Commuter 73
		commuterMatrix[73][0] = 4;
		commuterMatrix[73][1] = 1;

		// Commuter 74
		commuterMatrix[74][0] = 2;
		commuterMatrix[74][1] = 0;

		// Commuter 75
		commuterMatrix[75][0] = 2;
		commuterMatrix[75][1] = 0;

		// Commuter 76
		commuterMatrix[76][0] = 2;
		commuterMatrix[76][1] = 0;

		// Commuter 77
		commuterMatrix[77][0] = 2;
		commuterMatrix[77][1] = 0;

		// Commuter 78
		commuterMatrix[78][0] = 4;
		commuterMatrix[78][1] = 1;

		// Commuter 79
		commuterMatrix[79][0] = 4;
		commuterMatrix[79][1] = 0;

		// Commuter 80
		commuterMatrix[80][0] = 4;
		commuterMatrix[80][1] = 0;

		// Commuter 81
		commuterMatrix[81][0] = 3;
		commuterMatrix[81][1] = 1;

		/* commuterDelays */

		// commuterDelay 0
		commuterDelays[0][0] = 56;
		commuterDelays[0][1] = 37;

		// commuterDelay 1
		commuterDelays[1][0] = 50;
		commuterDelays[1][1] = 54;

		// commuterDelay 2
		commuterDelays[2][0] = 30;
		commuterDelays[2][1] = 39;

		// commuterDelay 3
		commuterDelays[3][0] = 33;
		commuterDelays[3][1] = 51;

		// commuterDelay 4
		commuterDelays[4][0] = 46;
		commuterDelays[4][1] = 17;

		// commuterDelay 5
		commuterDelays[5][0] = 29;
		commuterDelays[5][1] = 43;

		// commuterDelay 6
		commuterDelays[6][0] = 33;
		commuterDelays[6][1] = 52;

		// commuterDelay 7
		commuterDelays[7][0] = 49;
		commuterDelays[7][1] = 33;

		// commuterDelay 8
		commuterDelays[8][0] = 33;
		commuterDelays[8][1] = 46;

		// commuterDelay 9
		commuterDelays[9][0] = 47;
		commuterDelays[9][1] = 40;

		// commuterDelay 10
		commuterDelays[10][0] = 35;
		commuterDelays[10][1] = 36;

		// commuterDelay 11
		commuterDelays[11][0] = 33;
		commuterDelays[11][1] = 38;

		// commuterDelay 12
		commuterDelays[12][0] = 33;
		commuterDelays[12][1] = 42;

		// commuterDelay 13
		commuterDelays[13][0] = 42;
		commuterDelays[13][1] = 39;

		// commuterDelay 14
		commuterDelays[14][0] = 39;
		commuterDelays[14][1] = 46;

		// commuterDelay 15
		commuterDelays[15][0] = 51;
		commuterDelays[15][1] = 27;

		// commuterDelay 16
		commuterDelays[16][0] = 45;
		commuterDelays[16][1] = 43;

		// commuterDelay 17
		commuterDelays[17][0] = 37;
		commuterDelays[17][1] = 29;

		// commuterDelay 18
		commuterDelays[18][0] = 44;
		commuterDelays[18][1] = 45;

		// commuterDelay 19
		commuterDelays[19][0] = 43;
		commuterDelays[19][1] = 30;

		// commuterDelay 20
		commuterDelays[20][0] = 55;
		commuterDelays[20][1] = 38;

		// commuterDelay 21
		commuterDelays[21][0] = 34;
		commuterDelays[21][1] = 47;

		// commuterDelay 22
		commuterDelays[22][0] = 44;
		commuterDelays[22][1] = 36;

		// commuterDelay 23
		commuterDelays[23][0] = 30;
		commuterDelays[23][1] = 34;

		// commuterDelay 24
		commuterDelays[24][0] = 47;
		commuterDelays[24][1] = 37;

		// commuterDelay 25
		commuterDelays[25][0] = 23;
		commuterDelays[25][1] = 44;

		// commuterDelay 26
		commuterDelays[26][0] = 54;
		commuterDelays[26][1] = 38;

		// commuterDelay 27
		commuterDelays[27][0] = 48;
		commuterDelays[27][1] = 50;

		// commuterDelay 28
		commuterDelays[28][0] = 45;
		commuterDelays[28][1] = 36;

		// commuterDelay 29
		commuterDelays[29][0] = 36;
		commuterDelays[29][1] = 49;

		// commuterDelay 30
		commuterDelays[30][0] = 32;
		commuterDelays[30][1] = 43;

		// commuterDelay 31
		commuterDelays[31][0] = 30;
		commuterDelays[31][1] = 32;

		// commuterDelay 32
		commuterDelays[32][0] = 37;
		commuterDelays[32][1] = 47;

		// commuterDelay 33
		commuterDelays[33][0] = 40;
		commuterDelays[33][1] = 49;

		// commuterDelay 34
		commuterDelays[34][0] = 46;
		commuterDelays[34][1] = 27;

		// commuterDelay 35
		commuterDelays[35][0] = 40;
		commuterDelays[35][1] = 51;

		// commuterDelay 36
		commuterDelays[36][0] = 57;
		commuterDelays[36][1] = 38;

		// commuterDelay 37
		commuterDelays[37][0] = 32;
		commuterDelays[37][1] = 50;

		// commuterDelay 38
		commuterDelays[38][0] = 40;
		commuterDelays[38][1] = 27;

		// commuterDelay 39
		commuterDelays[39][0] = 44;
		commuterDelays[39][1] = 41;

		// commuterDelay 40
		commuterDelays[40][0] = 33;
		commuterDelays[40][1] = 43;

		// commuterDelay 41
		commuterDelays[41][0] = 42;
		commuterDelays[41][1] = 27;

		// commuterDelay 42
		commuterDelays[42][0] = 23;
		commuterDelays[42][1] = 38;

		// commuterDelay 43
		commuterDelays[43][0] = 38;
		commuterDelays[43][1] = 45;

		// commuterDelay 44
		commuterDelays[44][0] = 42;
		commuterDelays[44][1] = 26;

		// commuterDelay 45
		commuterDelays[45][0] = 33;
		commuterDelays[45][1] = 38;

		// commuterDelay 46
		commuterDelays[46][0] = 35;
		commuterDelays[46][1] = 48;

		// commuterDelay 47
		commuterDelays[47][0] = 23;
		commuterDelays[47][1] = 34;

		// commuterDelay 48
		commuterDelays[48][0] = 42;
		commuterDelays[48][1] = 44;

		// commuterDelay 49
		commuterDelays[49][0] = 41;
		commuterDelays[49][1] = 35;

		// commuterDelay 50
		commuterDelays[50][0] = 52;
		commuterDelays[50][1] = 40;

		// commuterDelay 51
		commuterDelays[51][0] = 47;
		commuterDelays[51][1] = 36;

		// commuterDelay 52
		commuterDelays[52][0] = 38;
		commuterDelays[52][1] = 43;

		// commuterDelay 53
		commuterDelays[53][0] = 33;
		commuterDelays[53][1] = 49;

		// commuterDelay 54
		commuterDelays[54][0] = 49;
		commuterDelays[54][1] = 38;

		// commuterDelay 55
		commuterDelays[55][0] = 36;
		commuterDelays[55][1] = 50;

		// commuterDelay 56
		commuterDelays[56][0] = 45;
		commuterDelays[56][1] = 30;

		// commuterDelay 57
		commuterDelays[57][0] = 43;
		commuterDelays[57][1] = 42;

		// commuterDelay 58
		commuterDelays[58][0] = 36;
		commuterDelays[58][1] = 39;

		// commuterDelay 59
		commuterDelays[59][0] = 46;
		commuterDelays[59][1] = 44;

		// commuterDelay 60
		commuterDelays[60][0] = 61;
		commuterDelays[60][1] = 47;

		// commuterDelay 61
		commuterDelays[61][0] = 41;
		commuterDelays[61][1] = 42;

		// commuterDelay 62
		commuterDelays[62][0] = 34;
		commuterDelays[62][1] = 33;

		// commuterDelay 63
		commuterDelays[63][0] = 42;
		commuterDelays[63][1] = 39;

		// commuterDelay 64
		commuterDelays[64][0] = 34;
		commuterDelays[64][1] = 32;

		// commuterDelay 65
		commuterDelays[65][0] = 38;
		commuterDelays[65][1] = 32;

		// commuterDelay 66
		commuterDelays[66][0] = 45;
		commuterDelays[66][1] = 41;

		// commuterDelay 67
		commuterDelays[67][0] = 38;
		commuterDelays[67][1] = 43;

		// commuterDelay 68
		commuterDelays[68][0] = 43;
		commuterDelays[68][1] = 37;

		// commuterDelay 69
		commuterDelays[69][0] = 33;
		commuterDelays[69][1] = 39;

		// commuterDelay 70
		commuterDelays[70][0] = 39;
		commuterDelays[70][1] = 43;

		// commuterDelay 71
		commuterDelays[71][0] = 55;
		commuterDelays[71][1] = 48;

		// commuterDelay 72
		commuterDelays[72][0] = 45;
		commuterDelays[72][1] = 43;

		// commuterDelay 73
		commuterDelays[73][0] = 33;
		commuterDelays[73][1] = 32;

		// commuterDelay 74
		commuterDelays[74][0] = 38;
		commuterDelays[74][1] = 25;

		// commuterDelay 75
		commuterDelays[75][0] = 44;
		commuterDelays[75][1] = 38;

		// commuterDelay 76
		commuterDelays[76][0] = 40;
		commuterDelays[76][1] = 45;

		// commuterDelay 77
		commuterDelays[77][0] = 41;
		commuterDelays[77][1] = 50;

		// commuterDelay 78
		commuterDelays[78][0] = 32;
		commuterDelays[78][1] = 34;

		// commuterDelay 79
		commuterDelays[79][0] = 33;
		commuterDelays[79][1] = 35;

		// commuterDelay 80
		commuterDelays[80][0] = 37;
		commuterDelays[80][1] = 41;

		// commuterDelay 81
		commuterDelays[81][0] = 49;
		commuterDelays[81][1] = 44;

		/* commuterPriority */

		//  0
		commuterPriority[0][0] = 0.0;
		commuterPriority[0][1] = 0.01;
		commuterPriority[0][2] = 0.01;
		commuterPriority[0][3] = 0.01;

		//  1
		commuterPriority[1][0] = 0.0;
		commuterPriority[1][1] = 0.02;
		commuterPriority[1][2] = 0.01;
		commuterPriority[1][3] = 0.01;

		//  2
		commuterPriority[2][0] = 0.0;
		commuterPriority[2][1] = 0.09;
		commuterPriority[2][2] = 0.01;
		commuterPriority[2][3] = 0.02;

		//  3
		commuterPriority[3][0] = 0.0;
		commuterPriority[3][1] = 0.01;
		commuterPriority[3][2] = 0.01;
		commuterPriority[3][3] = 0.01;

		//  4
		commuterPriority[4][0] = 0.0;
		commuterPriority[4][1] = 0.01;
		commuterPriority[4][2] = 0.01;
		commuterPriority[4][3] = 0.01;

		//  5
		commuterPriority[5][0] = 0.0;
		commuterPriority[5][1] = 0.01;
		commuterPriority[5][2] = 0.01;
		commuterPriority[5][3] = 0.01;

		//  6
		commuterPriority[6][0] = 0.0;
		commuterPriority[6][1] = 0.03;
		commuterPriority[6][2] = 0.01;
		commuterPriority[6][3] = 0.01;

		//  7
		commuterPriority[7][0] = 0.0;
		commuterPriority[7][1] = 0.02;
		commuterPriority[7][2] = 0.01;
		commuterPriority[7][3] = 0.01;

		//  8
		commuterPriority[8][0] = 0.0;
		commuterPriority[8][1] = 0.1;
		commuterPriority[8][2] = 0.02;
		commuterPriority[8][3] = 0.03;

		//  9
		commuterPriority[9][0] = 0.0;
		commuterPriority[9][1] = 0.04;
		commuterPriority[9][2] = 0.01;
		commuterPriority[9][3] = 0.01;

		//  10
		commuterPriority[10][0] = 0.0;
		commuterPriority[10][1] = 0.06;
		commuterPriority[10][2] = 0.01;
		commuterPriority[10][3] = 0.02;

		//  11
		commuterPriority[11][0] = 0.0;
		commuterPriority[11][1] = 0.03;
		commuterPriority[11][2] = 0.01;
		commuterPriority[11][3] = 0.01;

		//  12
		commuterPriority[12][0] = 0.0;
		commuterPriority[12][1] = 0.04;
		commuterPriority[12][2] = 0.01;
		commuterPriority[12][3] = 0.01;

		//  13
		commuterPriority[13][0] = 0.0;
		commuterPriority[13][1] = 0.06;
		commuterPriority[13][2] = 0.01;
		commuterPriority[13][3] = 0.01;

		//  14
		commuterPriority[14][0] = 0.0;
		commuterPriority[14][1] = 0.05;
		commuterPriority[14][2] = 0.01;
		commuterPriority[14][3] = 0.01;

		//  15
		commuterPriority[15][0] = 0.0;
		commuterPriority[15][1] = 0.04;
		commuterPriority[15][2] = 0.01;
		commuterPriority[15][3] = 0.01;

		//  16
		commuterPriority[16][0] = 0.0;
		commuterPriority[16][1] = 0.01;
		commuterPriority[16][2] = 0.01;
		commuterPriority[16][3] = 0.01;

		//  17
		commuterPriority[17][0] = 0.0;
		commuterPriority[17][1] = 0.01;
		commuterPriority[17][2] = 0.01;
		commuterPriority[17][3] = 0.01;

		//  18
		commuterPriority[18][0] = 0.0;
		commuterPriority[18][1] = 0.04;
		commuterPriority[18][2] = 0.01;
		commuterPriority[18][3] = 0.01;

		//  19
		commuterPriority[19][0] = 0.0;
		commuterPriority[19][1] = 0.04;
		commuterPriority[19][2] = 0.01;
		commuterPriority[19][3] = 0.01;

		//  20
		commuterPriority[20][0] = 0.0;
		commuterPriority[20][1] = 0.04;
		commuterPriority[20][2] = 0.01;
		commuterPriority[20][3] = 0.01;

		//  21
		commuterPriority[21][0] = 0.0;
		commuterPriority[21][1] = 0.06;
		commuterPriority[21][2] = 0.01;
		commuterPriority[21][3] = 0.01;

		//  22
		commuterPriority[22][0] = 0.0;
		commuterPriority[22][1] = 0.06;
		commuterPriority[22][2] = 0.01;
		commuterPriority[22][3] = 0.02;

		//  23
		commuterPriority[23][0] = 0.0;
		commuterPriority[23][1] = 0.06;
		commuterPriority[23][2] = 0.01;
		commuterPriority[23][3] = 0.02;

		//  24
		commuterPriority[24][0] = 0.0;
		commuterPriority[24][1] = 0.03;
		commuterPriority[24][2] = 0.01;
		commuterPriority[24][3] = 0.01;

		//  25
		commuterPriority[25][0] = 0.0;
		commuterPriority[25][1] = 0.04;
		commuterPriority[25][2] = 0.01;
		commuterPriority[25][3] = 0.01;

		//  26
		commuterPriority[26][0] = 0.0;
		commuterPriority[26][1] = 0.04;
		commuterPriority[26][2] = 0.01;
		commuterPriority[26][3] = 0.01;

		//  27
		commuterPriority[27][0] = 0.0;
		commuterPriority[27][1] = 0.09;
		commuterPriority[27][2] = 0.01;
		commuterPriority[27][3] = 0.02;

		//  28
		commuterPriority[28][0] = 0.0;
		commuterPriority[28][1] = 0.02;
		commuterPriority[28][2] = 0.01;
		commuterPriority[28][3] = 0.01;

		//  29
		commuterPriority[29][0] = 0.0;
		commuterPriority[29][1] = 0.02;
		commuterPriority[29][2] = 0.01;
		commuterPriority[29][3] = 0.01;

		//  30
		commuterPriority[30][0] = 0.0;
		commuterPriority[30][1] = 0.04;
		commuterPriority[30][2] = 0.01;
		commuterPriority[30][3] = 0.01;

		//  31
		commuterPriority[31][0] = 0.0;
		commuterPriority[31][1] = 0.04;
		commuterPriority[31][2] = 0.01;
		commuterPriority[31][3] = 0.01;

		//  32
		commuterPriority[32][0] = 0.0;
		commuterPriority[32][1] = 0.04;
		commuterPriority[32][2] = 0.01;
		commuterPriority[32][3] = 0.01;

		//  33
		commuterPriority[33][0] = 0.0;
		commuterPriority[33][1] = 0.01;
		commuterPriority[33][2] = 0.01;
		commuterPriority[33][3] = 0.01;

		//  34
		commuterPriority[34][0] = 0.0;
		commuterPriority[34][1] = 0.01;
		commuterPriority[34][2] = 0.01;
		commuterPriority[34][3] = 0.01;

		//  35
		commuterPriority[35][0] = 0.0;
		commuterPriority[35][1] = 0.03;
		commuterPriority[35][2] = 0.01;
		commuterPriority[35][3] = 0.01;

		//  36
		commuterPriority[36][0] = 0.0;
		commuterPriority[36][1] = 0.03;
		commuterPriority[36][2] = 0.01;
		commuterPriority[36][3] = 0.01;

		//  37
		commuterPriority[37][0] = 0.0;
		commuterPriority[37][1] = 0.05;
		commuterPriority[37][2] = 0.01;
		commuterPriority[37][3] = 0.01;

		//  38
		commuterPriority[38][0] = 0.0;
		commuterPriority[38][1] = 0.03;
		commuterPriority[38][2] = 0.01;
		commuterPriority[38][3] = 0.01;

		//  39
		commuterPriority[39][0] = 0.0;
		commuterPriority[39][1] = 0.04;
		commuterPriority[39][2] = 0.01;
		commuterPriority[39][3] = 0.01;

		//  40
		commuterPriority[40][0] = 0.0;
		commuterPriority[40][1] = 0.03;
		commuterPriority[40][2] = 0.01;
		commuterPriority[40][3] = 0.01;

		//  41
		commuterPriority[41][0] = 0.0;
		commuterPriority[41][1] = 0.01;
		commuterPriority[41][2] = 0.01;
		commuterPriority[41][3] = 0.01;

		//  42
		commuterPriority[42][0] = 0.0;
		commuterPriority[42][1] = 0.05;
		commuterPriority[42][2] = 0.01;
		commuterPriority[42][3] = 0.01;

		//  43
		commuterPriority[43][0] = 0.0;
		commuterPriority[43][1] = 0.04;
		commuterPriority[43][2] = 0.01;
		commuterPriority[43][3] = 0.01;

		//  44
		commuterPriority[44][0] = 0.0;
		commuterPriority[44][1] = 0.02;
		commuterPriority[44][2] = 0.01;
		commuterPriority[44][3] = 0.01;

		//  45
		commuterPriority[45][0] = 0.0;
		commuterPriority[45][1] = 0.01;
		commuterPriority[45][2] = 0.01;
		commuterPriority[45][3] = 0.01;

		//  46
		commuterPriority[46][0] = 0.0;
		commuterPriority[46][1] = 0.01;
		commuterPriority[46][2] = 0.01;
		commuterPriority[46][3] = 0.01;

		//  47
		commuterPriority[47][0] = 0.0;
		commuterPriority[47][1] = 0.01;
		commuterPriority[47][2] = 0.01;
		commuterPriority[47][3] = 0.01;

		//  48
		commuterPriority[48][0] = 0.0;
		commuterPriority[48][1] = 0.03;
		commuterPriority[48][2] = 0.01;
		commuterPriority[48][3] = 0.01;

		//  49
		commuterPriority[49][0] = 0.0;
		commuterPriority[49][1] = 0.02;
		commuterPriority[49][2] = 0.01;
		commuterPriority[49][3] = 0.01;

		//  50
		commuterPriority[50][0] = 0.0;
		commuterPriority[50][1] = 0.02;
		commuterPriority[50][2] = 0.01;
		commuterPriority[50][3] = 0.01;

		//  51
		commuterPriority[51][0] = 0.0;
		commuterPriority[51][1] = 0.04;
		commuterPriority[51][2] = 0.01;
		commuterPriority[51][3] = 0.01;

		//  52
		commuterPriority[52][0] = 0.0;
		commuterPriority[52][1] = 0.03;
		commuterPriority[52][2] = 0.01;
		commuterPriority[52][3] = 0.01;

		//  53
		commuterPriority[53][0] = 0.0;
		commuterPriority[53][1] = 0.03;
		commuterPriority[53][2] = 0.01;
		commuterPriority[53][3] = 0.01;

		//  54
		commuterPriority[54][0] = 0.0;
		commuterPriority[54][1] = 0.05;
		commuterPriority[54][2] = 0.01;
		commuterPriority[54][3] = 0.01;

		//  55
		commuterPriority[55][0] = 0.0;
		commuterPriority[55][1] = 0.04;
		commuterPriority[55][2] = 0.01;
		commuterPriority[55][3] = 0.01;

		//  56
		commuterPriority[56][0] = 0.0;
		commuterPriority[56][1] = 0.04;
		commuterPriority[56][2] = 0.01;
		commuterPriority[56][3] = 0.01;

		//  57
		commuterPriority[57][0] = 0.0;
		commuterPriority[57][1] = 0.04;
		commuterPriority[57][2] = 0.01;
		commuterPriority[57][3] = 0.01;

		//  58
		commuterPriority[58][0] = 0.0;
		commuterPriority[58][1] = 0.04;
		commuterPriority[58][2] = 0.01;
		commuterPriority[58][3] = 0.01;

		//  59
		commuterPriority[59][0] = 0.0;
		commuterPriority[59][1] = 0.02;
		commuterPriority[59][2] = 0.01;
		commuterPriority[59][3] = 0.01;

		//  60
		commuterPriority[60][0] = 0.0;
		commuterPriority[60][1] = 0.06;
		commuterPriority[60][2] = 0.01;
		commuterPriority[60][3] = 0.02;

		//  61
		commuterPriority[61][0] = 0.0;
		commuterPriority[61][1] = 0.06;
		commuterPriority[61][2] = 0.01;
		commuterPriority[61][3] = 0.01;

		//  62
		commuterPriority[62][0] = 0.0;
		commuterPriority[62][1] = 0.06;
		commuterPriority[62][2] = 0.01;
		commuterPriority[62][3] = 0.01;

		//  63
		commuterPriority[63][0] = 0.0;
		commuterPriority[63][1] = 0.01;
		commuterPriority[63][2] = 0.01;
		commuterPriority[63][3] = 0.01;

		//  64
		commuterPriority[64][0] = 0.0;
		commuterPriority[64][1] = 0.03;
		commuterPriority[64][2] = 0.01;
		commuterPriority[64][3] = 0.01;

		//  65
		commuterPriority[65][0] = 0.0;
		commuterPriority[65][1] = 0.04;
		commuterPriority[65][2] = 0.01;
		commuterPriority[65][3] = 0.01;

		//  66
		commuterPriority[66][0] = 0.0;
		commuterPriority[66][1] = 0.1;
		commuterPriority[66][2] = 0.02;
		commuterPriority[66][3] = 0.02;

		//  67
		commuterPriority[67][0] = 0.0;
		commuterPriority[67][1] = 0.04;
		commuterPriority[67][2] = 0.01;
		commuterPriority[67][3] = 0.01;

		//  68
		commuterPriority[68][0] = 0.0;
		commuterPriority[68][1] = 0.01;
		commuterPriority[68][2] = 0.01;
		commuterPriority[68][3] = 0.01;

		//  69
		commuterPriority[69][0] = 0.0;
		commuterPriority[69][1] = 0.02;
		commuterPriority[69][2] = 0.01;
		commuterPriority[69][3] = 0.01;

		//  70
		commuterPriority[70][0] = 0.0;
		commuterPriority[70][1] = 0.01;
		commuterPriority[70][2] = 0.01;
		commuterPriority[70][3] = 0.01;

		//  71
		commuterPriority[71][0] = 0.0;
		commuterPriority[71][1] = 0.01;
		commuterPriority[71][2] = 0.01;
		commuterPriority[71][3] = 0.01;

		//  72
		commuterPriority[72][0] = 0.0;
		commuterPriority[72][1] = 0.01;
		commuterPriority[72][2] = 0.01;
		commuterPriority[72][3] = 0.01;

		//  73
		commuterPriority[73][0] = 0.0;
		commuterPriority[73][1] = 0.03;
		commuterPriority[73][2] = 0.01;
		commuterPriority[73][3] = 0.01;

		//  74
		commuterPriority[74][0] = 0.0;
		commuterPriority[74][1] = 0.03;
		commuterPriority[74][2] = 0.01;
		commuterPriority[74][3] = 0.01;

		//  75
		commuterPriority[75][0] = 0.0;
		commuterPriority[75][1] = 0.01;
		commuterPriority[75][2] = 0.01;
		commuterPriority[75][3] = 0.01;

		//  76
		commuterPriority[76][0] = 0.0;
		commuterPriority[76][1] = 0.02;
		commuterPriority[76][2] = 0.01;
		commuterPriority[76][3] = 0.01;

		//  77
		commuterPriority[77][0] = 0.0;
		commuterPriority[77][1] = 0.04;
		commuterPriority[77][2] = 0.01;
		commuterPriority[77][3] = 0.01;

		//  78
		commuterPriority[78][0] = 0.0;
		commuterPriority[78][1] = 0.02;
		commuterPriority[78][2] = 0.01;
		commuterPriority[78][3] = 0.01;

		//  79
		commuterPriority[79][0] = 0.0;
		commuterPriority[79][1] = 0.04;
		commuterPriority[79][2] = 0.01;
		commuterPriority[79][3] = 0.01;

		//  80
		commuterPriority[80][0] = 0.0;
		commuterPriority[80][1] = 0.02;
		commuterPriority[80][2] = 0.01;
		commuterPriority[80][3] = 0.01;

		//  81
		commuterPriority[81][0] = 0.0;
		commuterPriority[81][1] = 0.04;
		commuterPriority[81][2] = 0.01;
		commuterPriority[81][3] = 0.01;

		/* thDistances */

		//  0
		thDistances[0][0] = 0;
		thDistances[0][1] = 910;
		thDistances[0][2] = 2376;
		thDistances[0][3] = 1610;
		thDistances[0][4] = 2510;

		//  1
		thDistances[1][0] = 910;
		thDistances[1][1] = 0;
		thDistances[1][2] = 2296;
		thDistances[1][3] = 2390;
		thDistances[1][4] = 3300;

		//  2
		thDistances[2][0] = 2376;
		thDistances[2][1] = 2296;
		thDistances[2][2] = 0;
		thDistances[2][3] = 900;
		thDistances[2][4] = 1220;

		//  3
		thDistances[3][0] = 1610;
		thDistances[3][1] = 2390;
		thDistances[3][2] = 900;
		thDistances[3][3] = 0;
		thDistances[3][4] = 910;

		//  4
		thDistances[4][0] = 2510;
		thDistances[4][1] = 3300;
		thDistances[4][2] = 1220;
		thDistances[4][3] = 910;
		thDistances[4][4] = 0;

		/* service1AvgSpeed */

		//  0
		service1AvgSpeed[0][0] = 0.0;
		service1AvgSpeed[0][1] = 5.55;
		service1AvgSpeed[0][2] = 5.55;
		service1AvgSpeed[0][3] = 5.55;
		service1AvgSpeed[0][4] = 5.55;

		//  1
		service1AvgSpeed[1][0] = 5.55;
		service1AvgSpeed[1][1] = 0.0;
		service1AvgSpeed[1][2] = 5.55;
		service1AvgSpeed[1][3] = 5.55;
		service1AvgSpeed[1][4] = 5.55;

		//  2
		service1AvgSpeed[2][0] = 5.55;
		service1AvgSpeed[2][1] = 5.55;
		service1AvgSpeed[2][2] = 0.0;
		service1AvgSpeed[2][3] = 5.55;
		service1AvgSpeed[2][4] = 5.55;

		//  3
		service1AvgSpeed[3][0] = 5.55;
		service1AvgSpeed[3][1] = 5.55;
		service1AvgSpeed[3][2] = 5.55;
		service1AvgSpeed[3][3] = 0.0;
		service1AvgSpeed[3][4] = 5.55;

		//  4
		service1AvgSpeed[4][0] = 5.55;
		service1AvgSpeed[4][1] = 5.55;
		service1AvgSpeed[4][2] = 5.55;
		service1AvgSpeed[4][3] = 5.55;
		service1AvgSpeed[4][4] = 0.0;

		/* service2AvgSpeed */

		//  0
		service2AvgSpeed[0][0] = 0.0;
		service2AvgSpeed[0][1] = 15.0;
		service2AvgSpeed[0][2] = 15.0;
		service2AvgSpeed[0][3] = 15.0;
		service2AvgSpeed[0][4] = 15.0;

		//  1
		service2AvgSpeed[1][0] = 15.0;
		service2AvgSpeed[1][1] = 0.0;
		service2AvgSpeed[1][2] = 15.0;
		service2AvgSpeed[1][3] = 15.0;
		service2AvgSpeed[1][4] = 15.0;

		//  2
		service2AvgSpeed[2][0] = 15.0;
		service2AvgSpeed[2][1] = 15.0;
		service2AvgSpeed[2][2] = 0.0;
		service2AvgSpeed[2][3] = 15.0;
		service2AvgSpeed[2][4] = 15.0;

		//  3
		service2AvgSpeed[3][0] = 15.0;
		service2AvgSpeed[3][1] = 15.0;
		service2AvgSpeed[3][2] = 15.0;
		service2AvgSpeed[3][3] = 0.0;
		service2AvgSpeed[3][4] = 15.0;

		//  4
		service2AvgSpeed[4][0] = 15.0;
		service2AvgSpeed[4][1] = 15.0;
		service2AvgSpeed[4][2] = 15.0;
		service2AvgSpeed[4][3] = 15.0;
		service2AvgSpeed[4][4] = 0.0;

		/* service3AvgSpeed */

		//  0
		service3AvgSpeed[0][0] = 0.0;
		service3AvgSpeed[0][1] = 10.45;
		service3AvgSpeed[0][2] = 10.45;
		service3AvgSpeed[0][3] = 10.45;
		service3AvgSpeed[0][4] = 10.45;

		//  1
		service3AvgSpeed[1][0] = 10.45;
		service3AvgSpeed[1][1] = 0.0;
		service3AvgSpeed[1][2] = 10.45;
		service3AvgSpeed[1][3] = 10.45;
		service3AvgSpeed[1][4] = 10.45;

		//  2
		service3AvgSpeed[2][0] = 10.45;
		service3AvgSpeed[2][1] = 10.45;
		service3AvgSpeed[2][2] = 0.0;
		service3AvgSpeed[2][3] = 10.45;
		service3AvgSpeed[2][4] = 10.45;

		//  3
		service3AvgSpeed[3][0] = 10.45;
		service3AvgSpeed[3][1] = 10.45;
		service3AvgSpeed[3][2] = 10.45;
		service3AvgSpeed[3][3] = 0.0;
		service3AvgSpeed[3][4] = 10.45;

		//  4
		service3AvgSpeed[4][0] = 10.45;
		service3AvgSpeed[4][1] = 10.45;
		service3AvgSpeed[4][2] = 10.45;
		service3AvgSpeed[4][3] = 10.45;
		service3AvgSpeed[4][4] = 0.0;

		/* [STEP 1] MOBILITY SERVICE SELECTION */
		int availableService = 0;

		/* [case 0] no mobility service is currently available: TODO @see future work for walk */
		if(mobServiceFleets[1] == 0 && mobServiceFleets[2] == 0 && mobServiceFleets[3] == 0) {

			//numOfServiceDisruptions++;
			master.commuterEndOfTheDay(commuterID, true);

		} else { /* following [case 1-7] > at least 1 service is available */

			double maxScore = 0.0;

			/* Commuter personal mobility service priority */
			double[3] servicePriorities;
			servicePriorities[0] = commuterPriority[commuterID][1];
			servicePriorities[1] = commuterPriority[commuterID][2];
			servicePriorities[2] = commuterPriority[commuterID][3];

			for (int i = 0; i < 3; i++) {
				if((servicePriorities[i] * mobServiceFleets[i+1]) > maxScore) {
					maxScore = servicePriorities[i] * mobServiceFleets[i+1];
					availableService = i + 1;
				}
			}

			/* [STEP 2] Decreasing the selected mobility service fleet */
			mobServiceFleets[availableService]--;

			/* Update the unused Mobility Service Container */
			if(unusedMobServiceFleets[availableService] > mobServiceFleets[availableService]){
				unusedMobServiceFleets[availableService] = mobServiceFleets[availableService];
			}

			/* [STEP 3] Computing travel times given hub2hub distance and selected mob service */

			int destinationTangrhub = firstTrip ? commuterMatrix[commuterID][1] : commuterMatrix[commuterID][0];
			int hubToHubDistance = thDistances[thID][destinationTangrhub];
			int hubToHubDelay = firstTrip ? commuterDelays[commuterID][0] : commuterDelays[commuterID][1];

			/*these values are computed according to the chosen service */
			int hubToHubTripTime;
			double hubToHubServiceSpeed;
			double costPerKm;
			double costPerHour;
			double fixedCost;
			double totalCost;

			if(availableService == 1){
				hubToHubServiceSpeed = service1AvgSpeed[thID][destinationTangrhub];
				hubToHubTripTime = (int) ((hubToHubDistance * 1000) / hubToHubServiceSpeed);
				costPerKm = (hubToHubDistance * service1CostPerKm) / 1000;
				fixedCost = service1CostFixed;
			}
			else if(availableService == 2){
				hubToHubServiceSpeed = service2AvgSpeed[thID][destinationTangrhub];
				hubToHubTripTime = (int) ((hubToHubDistance * 1000) / hubToHubServiceSpeed);
				costPerKm = (hubToHubDistance * service2CostPerKm) / 1000;
				fixedCost = service2CostFixed;
			}
			else if(availableService == 3){
				hubToHubServiceSpeed = service3AvgSpeed[thID][destinationTangrhub];
				hubToHubTripTime = (int) ((hubToHubDistance * 1000) / hubToHubServiceSpeed);
				costPerKm = (hubToHubDistance * service3CostPerKm) / 1000;
				fixedCost = service3CostFixed;
			}

			hubToHubTripTime =  hubToHubTripTime + (hubToHubTripTime * hubToHubDelay) / 100;

			/* Updating data collector */
			usedMobService[availableService]++;
			timeUsedMobService[availableService] += hubToHubTripTime;

			switch (availableService) {
				case 0: costPerHour = (hubToHubTripTime * service0CostPerHour) / 3600000; break;
				case 1: costPerHour = (hubToHubTripTime * service1CostPerHour) / 3600000; break;
				case 2: costPerHour = (hubToHubTripTime * service2CostPerHour) / 3600000; break;
				case 3: costPerHour = (hubToHubTripTime * service3CostPerHour) / 3600000; break;
			}

			totalCost = costPerKm + costPerHour + fixedCost;

			costUsedMobService[availableService] += totalCost;

				/* [STEP 4] Sending message to the destination tangrhub once trip time ellapsed */

			switch (destinationTangrhub) {
				case 0: th0.deliverCommuter(commuterID, availableService, firstTrip) after(hubToHubTripTime); break;
				case 1: th1.deliverCommuter(commuterID, availableService, firstTrip) after(hubToHubTripTime); break;
				case 2: th2.deliverCommuter(commuterID, availableService, firstTrip) after(hubToHubTripTime); break;
				case 3: th3.deliverCommuter(commuterID, availableService, firstTrip) after(hubToHubTripTime); break;
				case 4: th4.deliverCommuter(commuterID, availableService, firstTrip) after(hubToHubTripTime); break;
			}

		} //endof no-mobserv else

	} //endof serveCommuter msgsrv

	msgsrv deliverCommuter(int commuterID, int selectedMobService, boolean firstTrip) {

		/* Redundant code: use env variables once possible */
		int[82][3] commuterMatrix;
		int[82][3] commuterDelays;
		/* commuterMatrix */

		// Commuter 0
		commuterMatrix[0][0] = 338855;
		commuterMatrix[0][1] = 25571319;
		commuterMatrix[0][2] = 477314;

		// Commuter 1
		commuterMatrix[1][0] = 164676;
		commuterMatrix[1][1] = 21011464;
		commuterMatrix[1][2] = 368007;

		// Commuter 2
		commuterMatrix[2][0] = 177514;
		commuterMatrix[2][1] = 28691649;
		commuterMatrix[2][2] = 280245;

		// Commuter 3
		commuterMatrix[3][0] = 953;
		commuterMatrix[3][1] = 30311863;
		commuterMatrix[3][2] = 486010;

		// Commuter 4
		commuterMatrix[4][0] = 169808;
		commuterMatrix[4][1] = 33191701;
		commuterMatrix[4][2] = 169024;

		// Commuter 5
		commuterMatrix[5][0] = 421730;
		commuterMatrix[5][1] = 28001872;
		commuterMatrix[5][2] = 598920;

		// Commuter 6
		commuterMatrix[6][0] = 142700;
		commuterMatrix[6][1] = 29111910;
		commuterMatrix[6][2] = 285464;

		// Commuter 7
		commuterMatrix[7][0] = 151802;
		commuterMatrix[7][1] = 22811389;
		commuterMatrix[7][2] = 340655;

		// Commuter 8
		commuterMatrix[8][0] = 244311;
		commuterMatrix[8][1] = 27551474;
		commuterMatrix[8][2] = 109982;

		// Commuter 9
		commuterMatrix[9][0] = 245555;
		commuterMatrix[9][1] = 25451903;
		commuterMatrix[9][2] = 174438;

		// Commuter 10
		commuterMatrix[10][0] = 142476;
		commuterMatrix[10][1] = 26711490;
		commuterMatrix[10][2] = 405093;

		// Commuter 11
		commuterMatrix[11][0] = 416008;
		commuterMatrix[11][1] = 28811796;
		commuterMatrix[11][2] = 146971;

		// Commuter 12
		commuterMatrix[12][0] = 109247;
		commuterMatrix[12][1] = 28811423;
		commuterMatrix[12][2] = 218103;

		// Commuter 13
		commuterMatrix[13][0] = 322635;
		commuterMatrix[13][1] = 28811503;
		commuterMatrix[13][2] = 101356;

		// Commuter 14
		commuterMatrix[14][0] = 246360;
		commuterMatrix[14][1] = 28871394;
		commuterMatrix[14][2] = 246488;

		// Commuter 15
		commuterMatrix[15][0] = 172862;
		commuterMatrix[15][1] = 29111711;
		commuterMatrix[15][2] = 121041;

		// Commuter 16
		commuterMatrix[16][0] = 260;
		commuterMatrix[16][1] = 28811514;
		commuterMatrix[16][2] = 171440;

		// Commuter 17
		commuterMatrix[17][0] = 198740;
		commuterMatrix[17][1] = 28811206;
		commuterMatrix[17][2] = 139495;

		// Commuter 18
		commuterMatrix[18][0] = 285196;
		commuterMatrix[18][1] = 28811977;
		commuterMatrix[18][2] = 361844;

		// Commuter 19
		commuterMatrix[19][0] = 181913;
		commuterMatrix[19][1] = 28811203;
		commuterMatrix[19][2] = 286974;

		// Commuter 20
		commuterMatrix[20][0] = 119539;
		commuterMatrix[20][1] = 21578710;
		commuterMatrix[20][2] = 169916;

		// Commuter 21
		commuterMatrix[21][0] = 103317;
		commuterMatrix[21][1] = 28811287;
		commuterMatrix[21][2] = 233075;

		// Commuter 22
		commuterMatrix[22][0] = 198115;
		commuterMatrix[22][1] = 27011555;
		commuterMatrix[22][2] = 397830;

		// Commuter 23
		commuterMatrix[23][0] = 144347;
		commuterMatrix[23][1] = 26411394;
		commuterMatrix[23][2] = 144029;

		// Commuter 24
		commuterMatrix[24][0] = 333823;
		commuterMatrix[24][1] = 28811232;
		commuterMatrix[24][2] = 297969;

		// Commuter 25
		commuterMatrix[25][0] = 84551;
		commuterMatrix[25][1] = 28811182;
		commuterMatrix[25][2] = 120187;

		// Commuter 26
		commuterMatrix[26][0] = 155929;
		commuterMatrix[26][1] = 28811300;
		commuterMatrix[26][2] = 219498;

		// Commuter 27
		commuterMatrix[27][0] = 177275;
		commuterMatrix[27][1] = 28811010;
		commuterMatrix[27][2] = 125659;

		// Commuter 28
		commuterMatrix[28][0] = 186700;
		commuterMatrix[28][1] = 21611138;
		commuterMatrix[28][2] = 131529;

		// Commuter 29
		commuterMatrix[29][0] = 157016;
		commuterMatrix[29][1] = 29831912;
		commuterMatrix[29][2] = 352556;

		// Commuter 30
		commuterMatrix[30][0] = 256259;
		commuterMatrix[30][1] = 25031673;
		commuterMatrix[30][2] = 99;

		// Commuter 31
		commuterMatrix[31][0] = 283818;
		commuterMatrix[31][1] = 28811263;
		commuterMatrix[31][2] = 358268;

		// Commuter 32
		commuterMatrix[32][0] = 261071;
		commuterMatrix[32][1] = 25151066;
		commuterMatrix[32][2] = 233896;

		// Commuter 33
		commuterMatrix[33][0] = 665220;
		commuterMatrix[33][1] = 26471704;
		commuterMatrix[33][2] = 469874;

		// Commuter 34
		commuterMatrix[34][0] = 136612;
		commuterMatrix[34][1] = 25211325;
		commuterMatrix[34][2] = 136998;

		// Commuter 35
		commuterMatrix[35][0] = 350;
		commuterMatrix[35][1] = 27251723;
		commuterMatrix[35][2] = 273404;

		// Commuter 36
		commuterMatrix[36][0] = 130955;
		commuterMatrix[36][1] = 27491515;
		commuterMatrix[36][2] = 130971;

		// Commuter 37
		commuterMatrix[37][0] = 108261;
		commuterMatrix[37][1] = 26591162;
		commuterMatrix[37][2] = 108536;

		// Commuter 38
		commuterMatrix[38][0] = 306904;
		commuterMatrix[38][1] = 27251357;
		commuterMatrix[38][2] = 306263;

		// Commuter 39
		commuterMatrix[39][0] = 254611;
		commuterMatrix[39][1] = 28811060;
		commuterMatrix[39][2] = 322374;

		// Commuter 40
		commuterMatrix[40][0] = 150117;
		commuterMatrix[40][1] = 21551418;
		commuterMatrix[40][2] = 336782;

		// Commuter 41
		commuterMatrix[41][0] = 142514;
		commuterMatrix[41][1] = 21731210;
		commuterMatrix[41][2] = 318307;

		// Commuter 42
		commuterMatrix[42][0] = 363356;
		commuterMatrix[42][1] = 28811987;
		commuterMatrix[42][2] = 324761;

		// Commuter 43
		commuterMatrix[43][0] = 123004;
		commuterMatrix[43][1] = 25811421;
		commuterMatrix[43][2] = 123535;

		// Commuter 44
		commuterMatrix[44][0] = 159864;
		commuterMatrix[44][1] = 26411482;
		commuterMatrix[44][2] = 357245;

		// Commuter 45
		commuterMatrix[45][0] = 248644;
		commuterMatrix[45][1] = 25751117;
		commuterMatrix[45][2] = 175327;

		// Commuter 46
		commuterMatrix[46][0] = 179460;
		commuterMatrix[46][1] = 28511637;
		commuterMatrix[46][2] = 508993;

		// Commuter 47
		commuterMatrix[47][0] = 416261;
		commuterMatrix[47][1] = 23651666;
		commuterMatrix[47][2] = 466354;

		// Commuter 48
		commuterMatrix[48][0] = 283001;
		commuterMatrix[48][1] = 28811351;
		commuterMatrix[48][2] = 283995;

		// Commuter 49
		commuterMatrix[49][0] = 214905;
		commuterMatrix[49][1] = 28151182;
		commuterMatrix[49][2] = 151695;

		// Commuter 50
		commuterMatrix[50][0] = 160802;
		commuterMatrix[50][1] = 26471014;
		commuterMatrix[50][2] = 160130;

		// Commuter 51
		commuterMatrix[51][0] = 257579;
		commuterMatrix[51][1] = 29171080;
		commuterMatrix[51][2] = 288796;

		// Commuter 52
		commuterMatrix[52][0] = 143083;
		commuterMatrix[52][1] = 28811781;
		commuterMatrix[52][2] = 287397;

		// Commuter 53
		commuterMatrix[53][0] = 749;
		commuterMatrix[53][1] = 28211729;
		commuterMatrix[53][2] = 386104;

		// Commuter 54
		commuterMatrix[54][0] = 155020;
		commuterMatrix[54][1] = 25811555;
		commuterMatrix[54][2] = 245626;

		// Commuter 55
		commuterMatrix[55][0] = 259473;
		commuterMatrix[55][1] = 29171522;
		commuterMatrix[55][2] = 182185;

		// Commuter 56
		commuterMatrix[56][0] = 120010;
		commuterMatrix[56][1] = 28811265;
		commuterMatrix[56][2] = 120255;

		// Commuter 57
		commuterMatrix[57][0] = 173074;
		commuterMatrix[57][1] = 25211651;
		commuterMatrix[57][2] = 122453;

		// Commuter 58
		commuterMatrix[58][0] = 415254;
		commuterMatrix[58][1] = 28811799;
		commuterMatrix[58][2] = 415786;

		// Commuter 59
		commuterMatrix[59][0] = 364219;
		commuterMatrix[59][1] = 28811396;
		commuterMatrix[59][2] = 325092;

		// Commuter 60
		commuterMatrix[60][0] = 200259;
		commuterMatrix[60][1] = 28811390;
		commuterMatrix[60][2] = 401884;

		// Commuter 61
		commuterMatrix[61][0] = 209159;
		commuterMatrix[61][1] = 28811903;
		commuterMatrix[61][2] = 209052;

		// Commuter 62
		commuterMatrix[62][0] = 334027;
		commuterMatrix[62][1] = 28811838;
		commuterMatrix[62][2] = 105977;

		// Commuter 63
		commuterMatrix[63][0] = 437310;
		commuterMatrix[63][1] = 28871963;
		commuterMatrix[63][2] = 620946;

		// Commuter 64
		commuterMatrix[64][0] = 299929;
		commuterMatrix[64][1] = 28811000;
		commuterMatrix[64][2] = 335961;

		// Commuter 65
		commuterMatrix[65][0] = 123437;
		commuterMatrix[65][1] = 28811553;
		commuterMatrix[65][2] = 247855;

		// Commuter 66
		commuterMatrix[66][0] = 263799;
		commuterMatrix[66][1] = 21611052;
		commuterMatrix[66][2] = 234729;

		// Commuter 67
		commuterMatrix[67][0] = 263974;
		commuterMatrix[67][1] = 28571690;
		commuterMatrix[67][2] = 117071;

		// Commuter 68
		commuterMatrix[68][0] = 450433;
		commuterMatrix[68][1] = 25211611;
		commuterMatrix[68][2] = 142177;

		// Commuter 69
		commuterMatrix[69][0] = 218098;
		commuterMatrix[69][1] = 28811541;
		commuterMatrix[69][2] = 437586;

		// Commuter 70
		commuterMatrix[70][0] = 212071;
		commuterMatrix[70][1] = 28811494;
		commuterMatrix[70][2] = 424127;

		// Commuter 71
		commuterMatrix[71][0] = 293637;
		commuterMatrix[71][1] = 28811061;
		commuterMatrix[71][2] = 206982;

		// Commuter 72
		commuterMatrix[72][0] = 274941;
		commuterMatrix[72][1] = 29231220;
		commuterMatrix[72][2] = 433745;

		// Commuter 73
		commuterMatrix[73][0] = 139290;
		commuterMatrix[73][1] = 25211176;
		commuterMatrix[73][2] = 220010;

		// Commuter 74
		commuterMatrix[74][0] = 296270;
		commuterMatrix[74][1] = 30731391;
		commuterMatrix[74][2] = 420806;

		// Commuter 75
		commuterMatrix[75][0] = 295642;
		commuterMatrix[75][1] = 28811200;
		commuterMatrix[75][2] = 466044;

		// Commuter 76
		commuterMatrix[76][0] = 510996;
		commuterMatrix[76][1] = 28751142;
		commuterMatrix[76][2] = 510061;

		// Commuter 77
		commuterMatrix[77][0] = 120024;
		commuterMatrix[77][1] = 26651453;
		commuterMatrix[77][2] = 342619;

		// Commuter 78
		commuterMatrix[78][0] = 156137;
		commuterMatrix[78][1] = 25331835;
		commuterMatrix[78][2] = 247820;

		// Commuter 79
		commuterMatrix[79][0] = 117894;
		commuterMatrix[79][1] = 28811304;
		commuterMatrix[79][2] = 334157;

		// Commuter 80
		commuterMatrix[80][0] = 377760;
		commuterMatrix[80][1] = 28811581;
		commuterMatrix[80][2] = 377624;

		// Commuter 81
		commuterMatrix[81][0] = 259160;
		commuterMatrix[81][1] = 22271168;
		commuterMatrix[81][2] = 164529;

		/* commuterDelays */

		// commuterDelay 0
		commuterDelays[0][0] = 10;
		commuterDelays[0][1] = 16;
		commuterDelays[0][2] = 13;

		// commuterDelay 1
		commuterDelays[1][0] = 15;
		commuterDelays[1][1] = 20;
		commuterDelays[1][2] = 18;

		// commuterDelay 2
		commuterDelays[2][0] = 13;
		commuterDelays[2][1] = 13;
		commuterDelays[2][2] = 17;

		// commuterDelay 3
		commuterDelays[3][0] = 18;
		commuterDelays[3][1] = 13;
		commuterDelays[3][2] = 16;

		// commuterDelay 4
		commuterDelays[4][0] = 10;
		commuterDelays[4][1] = 16;
		commuterDelays[4][2] = 17;

		// commuterDelay 5
		commuterDelays[5][0] = 17;
		commuterDelays[5][1] = 16;
		commuterDelays[5][2] = 19;

		// commuterDelay 6
		commuterDelays[6][0] = 12;
		commuterDelays[6][1] = 15;
		commuterDelays[6][2] = 15;

		// commuterDelay 7
		commuterDelays[7][0] = 20;
		commuterDelays[7][1] = 13;
		commuterDelays[7][2] = 15;

		// commuterDelay 8
		commuterDelays[8][0] = 12;
		commuterDelays[8][1] = 19;
		commuterDelays[8][2] = 13;

		// commuterDelay 9
		commuterDelays[9][0] = 15;
		commuterDelays[9][1] = 19;
		commuterDelays[9][2] = 20;

		// commuterDelay 10
		commuterDelays[10][0] = 11;
		commuterDelays[10][1] = 20;
		commuterDelays[10][2] = 14;

		// commuterDelay 11
		commuterDelays[11][0] = 16;
		commuterDelays[11][1] = 15;
		commuterDelays[11][2] = 9;

		// commuterDelay 12
		commuterDelays[12][0] = 16;
		commuterDelays[12][1] = 14;
		commuterDelays[12][2] = 12;

		// commuterDelay 13
		commuterDelays[13][0] = 12;
		commuterDelays[13][1] = 9;
		commuterDelays[13][2] = 14;

		// commuterDelay 14
		commuterDelays[14][0] = 10;
		commuterDelays[14][1] = 20;
		commuterDelays[14][2] = 22;

		// commuterDelay 15
		commuterDelays[15][0] = 19;
		commuterDelays[15][1] = 14;
		commuterDelays[15][2] = 15;

		// commuterDelay 16
		commuterDelays[16][0] = 14;
		commuterDelays[16][1] = 16;
		commuterDelays[16][2] = 14;

		// commuterDelay 17
		commuterDelays[17][0] = 18;
		commuterDelays[17][1] = 24;
		commuterDelays[17][2] = 12;

		// commuterDelay 18
		commuterDelays[18][0] = 19;
		commuterDelays[18][1] = 17;
		commuterDelays[18][2] = 13;

		// commuterDelay 19
		commuterDelays[19][0] = 16;
		commuterDelays[19][1] = 19;
		commuterDelays[19][2] = 16;

		// commuterDelay 20
		commuterDelays[20][0] = 18;
		commuterDelays[20][1] = 12;
		commuterDelays[20][2] = 16;

		// commuterDelay 21
		commuterDelays[21][0] = 16;
		commuterDelays[21][1] = 18;
		commuterDelays[21][2] = 13;

		// commuterDelay 22
		commuterDelays[22][0] = 14;
		commuterDelays[22][1] = 10;
		commuterDelays[22][2] = 16;

		// commuterDelay 23
		commuterDelays[23][0] = 13;
		commuterDelays[23][1] = 18;
		commuterDelays[23][2] = 15;

		// commuterDelay 24
		commuterDelays[24][0] = 17;
		commuterDelays[24][1] = 15;
		commuterDelays[24][2] = 14;

		// commuterDelay 25
		commuterDelays[25][0] = 20;
		commuterDelays[25][1] = 11;
		commuterDelays[25][2] = 11;

		// commuterDelay 26
		commuterDelays[26][0] = 16;
		commuterDelays[26][1] = 16;
		commuterDelays[26][2] = 15;

		// commuterDelay 27
		commuterDelays[27][0] = 14;
		commuterDelays[27][1] = 18;
		commuterDelays[27][2] = 14;

		// commuterDelay 28
		commuterDelays[28][0] = 13;
		commuterDelays[28][1] = 17;
		commuterDelays[28][2] = 14;

		// commuterDelay 29
		commuterDelays[29][0] = 12;
		commuterDelays[29][1] = 15;
		commuterDelays[29][2] = 17;

		// commuterDelay 30
		commuterDelays[30][0] = 10;
		commuterDelays[30][1] = 11;
		commuterDelays[30][2] = 21;

		// commuterDelay 31
		commuterDelays[31][0] = 12;
		commuterDelays[31][1] = 15;
		commuterDelays[31][2] = 12;

		// commuterDelay 32
		commuterDelays[32][0] = 13;
		commuterDelays[32][1] = 19;
		commuterDelays[32][2] = 17;

		// commuterDelay 33
		commuterDelays[33][0] = 14;
		commuterDelays[33][1] = 18;
		commuterDelays[33][2] = 20;

		// commuterDelay 34
		commuterDelays[34][0] = 12;
		commuterDelays[34][1] = 15;
		commuterDelays[34][2] = 17;

		// commuterDelay 35
		commuterDelays[35][0] = 12;
		commuterDelays[35][1] = 19;
		commuterDelays[35][2] = 17;

		// commuterDelay 36
		commuterDelays[36][0] = 19;
		commuterDelays[36][1] = 17;
		commuterDelays[36][2] = 15;

		// commuterDelay 37
		commuterDelays[37][0] = 13;
		commuterDelays[37][1] = 12;
		commuterDelays[37][2] = 13;

		// commuterDelay 38
		commuterDelays[38][0] = 24;
		commuterDelays[38][1] = 18;
		commuterDelays[38][2] = 16;

		// commuterDelay 39
		commuterDelays[39][0] = 19;
		commuterDelays[39][1] = 18;
		commuterDelays[39][2] = 11;

		// commuterDelay 40
		commuterDelays[40][0] = 17;
		commuterDelays[40][1] = 15;
		commuterDelays[40][2] = 18;

		// commuterDelay 41
		commuterDelays[41][0] = 15;
		commuterDelays[41][1] = 13;
		commuterDelays[41][2] = 9;

		// commuterDelay 42
		commuterDelays[42][0] = 10;
		commuterDelays[42][1] = 22;
		commuterDelays[42][2] = 11;

		// commuterDelay 43
		commuterDelays[43][0] = 14;
		commuterDelays[43][1] = 16;
		commuterDelays[43][2] = 17;

		// commuterDelay 44
		commuterDelays[44][0] = 16;
		commuterDelays[44][1] = 19;
		commuterDelays[44][2] = 17;

		// commuterDelay 45
		commuterDelays[45][0] = 11;
		commuterDelays[45][1] = 12;
		commuterDelays[45][2] = 14;

		// commuterDelay 46
		commuterDelays[46][0] = 19;
		commuterDelays[46][1] = 15;
		commuterDelays[46][2] = 12;

		// commuterDelay 47
		commuterDelays[47][0] = 12;
		commuterDelays[47][1] = 11;
		commuterDelays[47][2] = 11;

		// commuterDelay 48
		commuterDelays[48][0] = 16;
		commuterDelays[48][1] = 16;
		commuterDelays[48][2] = 15;

		// commuterDelay 49
		commuterDelays[49][0] = 11;
		commuterDelays[49][1] = 9;
		commuterDelays[49][2] = 12;

		// commuterDelay 50
		commuterDelays[50][0] = 14;
		commuterDelays[50][1] = 17;
		commuterDelays[50][2] = 13;

		// commuterDelay 51
		commuterDelays[51][0] = 9;
		commuterDelays[51][1] = 14;
		commuterDelays[51][2] = 19;

		// commuterDelay 52
		commuterDelays[52][0] = 20;
		commuterDelays[52][1] = 16;
		commuterDelays[52][2] = 14;

		// commuterDelay 53
		commuterDelays[53][0] = 22;
		commuterDelays[53][1] = 14;
		commuterDelays[53][2] = 16;

		// commuterDelay 54
		commuterDelays[54][0] = 14;
		commuterDelays[54][1] = 18;
		commuterDelays[54][2] = 17;

		// commuterDelay 55
		commuterDelays[55][0] = 13;
		commuterDelays[55][1] = 16;
		commuterDelays[55][2] = 15;

		// commuterDelay 56
		commuterDelays[56][0] = 15;
		commuterDelays[56][1] = 15;
		commuterDelays[56][2] = 11;

		// commuterDelay 57
		commuterDelays[57][0] = 16;
		commuterDelays[57][1] = 14;
		commuterDelays[57][2] = 20;

		// commuterDelay 58
		commuterDelays[58][0] = 20;
		commuterDelays[58][1] = 16;
		commuterDelays[58][2] = 10;

		// commuterDelay 59
		commuterDelays[59][0] = 14;
		commuterDelays[59][1] = 12;
		commuterDelays[59][2] = 17;

		// commuterDelay 60
		commuterDelays[60][0] = 18;
		commuterDelays[60][1] = 14;
		commuterDelays[60][2] = 12;

		// commuterDelay 61
		commuterDelays[61][0] = 14;
		commuterDelays[61][1] = 18;
		commuterDelays[61][2] = 16;

		// commuterDelay 62
		commuterDelays[62][0] = 17;
		commuterDelays[62][1] = 13;
		commuterDelays[62][2] = 16;

		// commuterDelay 63
		commuterDelays[63][0] = 15;
		commuterDelays[63][1] = 19;
		commuterDelays[63][2] = 16;

		// commuterDelay 64
		commuterDelays[64][0] = 10;
		commuterDelays[64][1] = 14;
		commuterDelays[64][2] = 18;

		// commuterDelay 65
		commuterDelays[65][0] = 15;
		commuterDelays[65][1] = 13;
		commuterDelays[65][2] = 17;

		// commuterDelay 66
		commuterDelays[66][0] = 15;
		commuterDelays[66][1] = 14;
		commuterDelays[66][2] = 10;

		// commuterDelay 67
		commuterDelays[67][0] = 12;
		commuterDelays[67][1] = 19;
		commuterDelays[67][2] = 19;

		// commuterDelay 68
		commuterDelays[68][0] = 17;
		commuterDelays[68][1] = 17;
		commuterDelays[68][2] = 18;

		// commuterDelay 69
		commuterDelays[69][0] = 16;
		commuterDelays[69][1] = 13;
		commuterDelays[69][2] = 18;

		// commuterDelay 70
		commuterDelays[70][0] = 17;
		commuterDelays[70][1] = 15;
		commuterDelays[70][2] = 19;

		// commuterDelay 71
		commuterDelays[71][0] = 18;
		commuterDelays[71][1] = 16;
		commuterDelays[71][2] = 18;

		// commuterDelay 72
		commuterDelays[72][0] = 20;
		commuterDelays[72][1] = 13;
		commuterDelays[72][2] = 14;

		// commuterDelay 73
		commuterDelays[73][0] = 16;
		commuterDelays[73][1] = 19;
		commuterDelays[73][2] = 14;

		// commuterDelay 74
		commuterDelays[74][0] = 17;
		commuterDelays[74][1] = 19;
		commuterDelays[74][2] = 13;

		// commuterDelay 75
		commuterDelays[75][0] = 20;
		commuterDelays[75][1] = 15;
		commuterDelays[75][2] = 11;

		// commuterDelay 76
		commuterDelays[76][0] = 10;
		commuterDelays[76][1] = 17;
		commuterDelays[76][2] = 13;

		// commuterDelay 77
		commuterDelays[77][0] = 15;
		commuterDelays[77][1] = 16;
		commuterDelays[77][2] = 14;

		// commuterDelay 78
		commuterDelays[78][0] = 13;
		commuterDelays[78][1] = 14;
		commuterDelays[78][2] = 17;

		// commuterDelay 79
		commuterDelays[79][0] = 20;
		commuterDelays[79][1] = 15;
		commuterDelays[79][2] = 16;

		// commuterDelay 80
		commuterDelays[80][0] = 17;
		commuterDelays[80][1] = 15;
		commuterDelays[80][2] = 10;

		// commuterDelay 81
		commuterDelays[81][0] = 18;
		commuterDelays[81][1] = 11;
		commuterDelays[81][2] = 16;

		/* [STEP 1] Restore mobility service resources */
		mobServiceFleets[selectedMobService]++;

		if (firstTrip) {

			/* [STEP 2.1] Put a serveCommuter(id, !firstTrip) within itself  */

			int workTime = commuterMatrix[commuterID][1];
			int thToWorkWalkingTime = commuterMatrix[commuterID][2];
			int thToWorkTimeDelay = (commuterDelays[commuterID][0] * thToWorkWalkingTime) / 100;
			int workToThTimeDelay = (commuterDelays[commuterID][1] * thToWorkWalkingTime) / 100;

			int tangrhubArrivalTime = (thToWorkWalkingTime * 2) + workTime + thToWorkTimeDelay + workToThTimeDelay;

			self.serveCommuter(commuterID, false) after(tangrhubArrivalTime);

		} else {

		/* [STEP 2.2] Send a commuterEndOfDay message to the commuter generator */

			int thToHomeWalkingTime = commuterMatrix[commuterID][0];
			int homeToTangrhubTimeDelay = (commuterDelays[commuterID][2] * thToHomeWalkingTime) / 100;

			int homeArrivalTime = thToHomeWalkingTime + homeToTangrhubTimeDelay;

			master.commuterEndOfTheDay(commuterID, false) after(homeArrivalTime);
		}
	}

	msgsrv resetTangrhub() {

		int[5][3] initMobServiceFleet;

		/* Initial Configuration. CHANGE EVERY TIME THE SMI CONFIGURATION CHANGE */
		/* Initial configuration of Tangrhub 0 */
		initMobServiceFleet[0][0] = 25;
		initMobServiceFleet[0][1] = 25;
		initMobServiceFleet[0][2] = 25;

		/* Initial configuration of Tangrhub 1 */
		initMobServiceFleet[1][0] = 25;
		initMobServiceFleet[1][1] = 25;
		initMobServiceFleet[1][2] = 25;

		/* Initial configuration of Tangrhub 2 */
		initMobServiceFleet[2][0] = 25;
		initMobServiceFleet[2][1] = 25;
		initMobServiceFleet[2][2] = 25;

		/* Initial configuration of Tangrhub 3 */
		initMobServiceFleet[3][0] = 25;
		initMobServiceFleet[3][1] = 25;
		initMobServiceFleet[3][2] = 25;

		/* Initial configuration of Tangrhub 4 */
		initMobServiceFleet[4][0] = 25;
		initMobServiceFleet[4][1] = 25;
		initMobServiceFleet[4][2] = 25;


		//numOfServiceDisruptions = 0;

		mobServiceFleets[0] = 0;
		mobServiceFleets[1] = initMobServiceFleet[thID][0];
		mobServiceFleets[2] = initMobServiceFleet[thID][1];
		mobServiceFleets[3] = initMobServiceFleet[thID][2];

		unusedMobServiceFleets[0] = 0;
		unusedMobServiceFleets[1] = initMobServiceFleet[thID][0];
		unusedMobServiceFleets[2] = initMobServiceFleet[thID][1];
		unusedMobServiceFleets[3] = initMobServiceFleet[thID][2];

		usedMobService[0] = 0;
		usedMobService[1] = 0;
		usedMobService[2] = 0;
		usedMobService[3] = 0;
		timeUsedMobService[0] = 0;
		timeUsedMobService[1] = 0;
		timeUsedMobService[2] = 0;
		timeUsedMobService[3] = 0;
		costUsedMobService[0] = 0;
		costUsedMobService[1] = 0;
		costUsedMobService[2] = 0;
		costUsedMobService[3] = 0;
	}

} //endof tangrhub rebec

main {

	//Tangrhub : int id, int serv1, int serv2, int serv3
	Tangrhub th0(master,th0,th1,th2,th3,th4):(0,25,25,25);
	Tangrhub th1(master,th0,th1,th2,th3,th4):(1,25,25,25);
	Tangrhub th2(master,th0,th1,th2,th3,th4):(2,25,25,25);
	Tangrhub th3(master,th0,th1,th2,th3,th4):(3,25,25,25);
	Tangrhub th4(master,th0,th1,th2,th3,th4):(4,25,25,25);

	CommuterGenerator master(th0,th1,th2,th3,th4):();

}
