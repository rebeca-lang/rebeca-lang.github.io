physicalclass Heater 
{
	knownrebecs {Controller controller;}
	statevars {real drinkTemp;}
	
	msgsrv initial(){
	}
	
	mode On{
		inv (drinkTemp <= 90) {
			drinkTemp' = (120 - drinkTemp)/20;
		}
		guard(drinkTemp == 90){
			controller.drinkHeated();
			setmode(Off);
		}
	}
	
	mode Off{
		inv (drinkTemp >= 25) {
			drinkTemp' = drinkTemp - 10;
		}
		guard(drinkTemp == 25){
			setmode(none);
		}
	}
}


softwareclass Controller
{
	knownrebecs{UserInterface userIn; Heater heater;}
	statevars {int nCoffee;}
	
	msgsrv initial(int nCoffee_){
		nCoffee = nCoffee_;
	}
	
	msgsrv prepareCoffee()
	{
		if(nCoffee<=0)
			userIn.alertNoCoffee();
		else
			heater.setMode(On);		
	}
	
	msgsrv drinkHeated()
	{
		nCoffee = nCoffee -1;
		userIn.deliverCoffee();
	}
}

softwareclass UserInterface
{
	knownrebecs{Controller controller}
	
	msgsrv initial(){
		self.requestCoffee();
	}
	
	msgsrv requestCoffee() {
		controller.prepareCoffee();
	}
	
	msgsrv deliverCoffee() {
		delay(1);
		self.requestCoffee();
	}
		
	msgsrv alertNoCoffee(){
	}
}

main {
	Heater heater(@Wire controller):();
	Controller controller(@Wire userIn,@Wire heater):(10);
	UserInterface userIn(@Wire controller):();
	
	CAN{
		priorities{
		}
		delays{
		}
	}
}